<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Adress" xml:space="preserve">
    <value>Adress</value>
  </data>
  <data name="Amount" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="Amount Is Required" xml:space="preserve">
    <value>Amount Is Required</value>
  </data>
  <data name="AreaTransport" xml:space="preserve">
    <value>AreaTransport</value>
  </data>
  <data name="AreaTransport Amount" xml:space="preserve">
    <value>AreaTransport Amount</value>
  </data>
  <data name="AreaTransport Amount Is Required" xml:space="preserve">
    <value>AreaTransport Amount Is Required</value>
  </data>
  <data name="AreaTransport Is Required" xml:space="preserve">
    <value>AreaTransport Is Required</value>
  </data>
  <data name="AreaTransport Unit" xml:space="preserve">
    <value>AreaTransport Unit</value>
  </data>
  <data name="AreaTransport Unit Is Required" xml:space="preserve">
    <value>AreaTransport Unit Is Required</value>
  </data>
  <data name="Buy Unit Price" xml:space="preserve">
    <value>Buy Unit Price</value>
  </data>
  <data name="Buy Unit Price Is Required" xml:space="preserve">
    <value>Buy Unit Price Is Required</value>
  </data>
  <data name="Car" xml:space="preserve">
    <value>Car</value>
  </data>
  <data name="Car Id" xml:space="preserve">
    <value>Car Id</value>
  </data>
  <data name="Car Is Required" xml:space="preserve">
    <value>Car Is Required</value>
  </data>
  <data name="Car Name" xml:space="preserve">
    <value>Car Name</value>
  </data>
  <data name="Car Name Is Required" xml:space="preserve">
    <value>Car Name Is Required</value>
  </data>
  <data name="Charge Area" xml:space="preserve">
    <value>Charge Area</value>
  </data>
  <data name="Charge Area Is Required" xml:space="preserve">
    <value>Charge Area Is Required</value>
  </data>
  <data name="Charge Customer" xml:space="preserve">
    <value>Charge Customer</value>
  </data>
  <data name="Charge Customer Is Required" xml:space="preserve">
    <value>Charge Customer Is Required</value>
  </data>
  <data name="Code" xml:space="preserve">
    <value>Code</value>
  </data>
  <data name="Company" xml:space="preserve">
    <value>Company</value>
  </data>
  <data name="Company Is Required" xml:space="preserve">
    <value>Company Is Required</value>
  </data>
  <data name="Cost Center" xml:space="preserve">
    <value>Cost Center</value>
  </data>
  <data name="Cost Center Is Required" xml:space="preserve">
    <value>Cost Center Is Required</value>
  </data>
  <data name="Current Balance" xml:space="preserve">
    <value>Current Balance</value>
  </data>
  <data name="Custody Type" xml:space="preserve">
    <value>Custody Type</value>
  </data>
  <data name="Custody Type Is Required" xml:space="preserve">
    <value>Custody Type Is Required</value>
  </data>
  <data name="Customer" xml:space="preserve">
    <value>Customer</value>
  </data>
  <data name="Customer Adress" xml:space="preserve">
    <value>Customer Adress</value>
  </data>
  <data name="Customer Fee" xml:space="preserve">
    <value>Customer Fee</value>
  </data>
  <data name="Customer Is Required" xml:space="preserve">
    <value>Customer Is Required</value>
  </data>
  <data name="Customer Name" xml:space="preserve">
    <value>Customer Name</value>
  </data>
  <data name="Customer Name Is Required" xml:space="preserve">
    <value>Customer Name Is Required</value>
  </data>
  <data name="Customer Qty" xml:space="preserve">
    <value>Customer Qty</value>
  </data>
  <data name="Customer Qty Is Required" xml:space="preserve">
    <value>Customer Qty Is Required</value>
  </data>
  <data name="Customer Qty Price" xml:space="preserve">
    <value>Customer Qty Price</value>
  </data>
  <data name="Customer Qty Price Is Required" xml:space="preserve">
    <value>Customer Qty Price Is Required</value>
  </data>
  <data name="Customer Total Price" xml:space="preserve">
    <value>Customer Total Price</value>
  </data>
  <data name="Customer Total Price Is Required" xml:space="preserve">
    <value>Customer Total Price Is Required</value>
  </data>
  <data name="Customer Type" xml:space="preserve">
    <value>Customer Type</value>
  </data>
  <data name="Customer Type Is Required" xml:space="preserve">
    <value>Customer Type Is Required</value>
  </data>
  <data name="Customer Unit Price" xml:space="preserve">
    <value>Customer Unit Price</value>
  </data>
  <data name="Customer Unit Price Is Required" xml:space="preserve">
    <value>Customer Unit Price Is Required</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="Date Is Required" xml:space="preserve">
    <value>Date Is Required</value>
  </data>
  <data name="Deposit No" xml:space="preserve">
    <value>Deposit No</value>
  </data>
  <data name="Deposit No Is Required" xml:space="preserve">
    <value>Deposit No Is Required</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Driver" xml:space="preserve">
    <value>Driver</value>
  </data>
  <data name="Driver Is Required" xml:space="preserve">
    <value>Driver Is Required</value>
  </data>
  <data name="Driver Name" xml:space="preserve">
    <value>Driver Name</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Email Is Required" xml:space="preserve">
    <value>Email Is Required</value>
  </data>
  <data name="English Name" xml:space="preserve">
    <value>English Name</value>
  </data>
  <data name="Fax" xml:space="preserve">
    <value>Fax</value>
  </data>
  <data name="Fee" xml:space="preserve">
    <value>Fee</value>
  </data>
  <data name="First Period Balance" xml:space="preserve">
    <value>First Period Balance</value>
  </data>
  <data name="First Period Balance Is Required" xml:space="preserve">
    <value>First Period Balance Is Required</value>
  </data>
  <data name="Full Name" xml:space="preserve">
    <value>Full Name</value>
  </data>
  <data name="Full Name Is Required" xml:space="preserve">
    <value>Full Name Is Required</value>
  </data>
  <data name="Innvoice No" xml:space="preserve">
    <value>Innvoice No</value>
  </data>
  <data name="Innvoice No Is Required" xml:space="preserve">
    <value>Innvoice No Is Required</value>
  </data>
  <data name="Invalid Target Price; Max 18 digits" xml:space="preserve">
    <value>Invalid Target Price; Max 18 digits</value>
  </data>
  <data name="Invalid Target Price; Maximum Two Decimal Points." xml:space="preserve">
    <value>Invalid Target Price; Maximum Two Decimal Points.</value>
  </data>
  <data name="Must Be Email Aderess" xml:space="preserve">
    <value>Must Be Email Aderess</value>
  </data>
  <data name="Must Be Email Adress" xml:space="preserve">
    <value>Must Be Email Adress</value>
  </data>
  <data name="Must Be Phone Number" xml:space="preserve">
    <value>Must Be Phone Number</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Name Is Required" xml:space="preserve">
    <value>Name Is Required</value>
  </data>
  <data name="Oil80 QTY" xml:space="preserve">
    <value>Oil80 QTY</value>
  </data>
  <data name="Oil80 QTY Is Required" xml:space="preserve">
    <value>Oil80 QTY Is Required</value>
  </data>
  <data name="Oil80 Total Price" xml:space="preserve">
    <value>Oil80 Total Price</value>
  </data>
  <data name="Oil80 Total Price Is Required" xml:space="preserve">
    <value>Oil80 Total Price Is Required</value>
  </data>
  <data name="Oil80 Unit Price" xml:space="preserve">
    <value>Oil80 Unit Price</value>
  </data>
  <data name="Oil80 Unit Price Is Required" xml:space="preserve">
    <value>Oil80 Unit Price Is Required</value>
  </data>
  <data name="Oil92 QTY" xml:space="preserve">
    <value>Oil92 QTY</value>
  </data>
  <data name="Oil92 QTY Is Required" xml:space="preserve">
    <value>Oil92 QTY Is Required</value>
  </data>
  <data name="Oil92 Total Price" xml:space="preserve">
    <value>Oil92 Total Price</value>
  </data>
  <data name="Oil92 Total Price Is Required" xml:space="preserve">
    <value>Oil92 Total Price Is Required</value>
  </data>
  <data name="Oil92 Unit Price" xml:space="preserve">
    <value>Oil92 Unit Price</value>
  </data>
  <data name="Oil92 Unit Price Is Required" xml:space="preserve">
    <value>Oil92 Unit Price Is Required</value>
  </data>
  <data name="Oil95 QTY" xml:space="preserve">
    <value>Oil95 QTY</value>
  </data>
  <data name="Oil95 QTY Is Required" xml:space="preserve">
    <value>Oil95 QTY Is Required</value>
  </data>
  <data name="Oil95 Total Price" xml:space="preserve">
    <value>Oil95 Total Price</value>
  </data>
  <data name="Oil95 Total Price Is Required" xml:space="preserve">
    <value>Oil95 Total Price Is Required</value>
  </data>
  <data name="Oil95 Unit Price" xml:space="preserve">
    <value>Oil95 Unit Price</value>
  </data>
  <data name="Oil95 Unit Price Is Required" xml:space="preserve">
    <value>Oil95 Unit Price Is Required</value>
  </data>
  <data name="Opening Balance" xml:space="preserve">
    <value>Opening Balance</value>
  </data>
  <data name="Opening Balance Date" xml:space="preserve">
    <value>Opening Balance Date</value>
  </data>
  <data name="Opening Balance Date Is Required" xml:space="preserve">
    <value>Opening Balance Date Is Required</value>
  </data>
  <data name="Opening Balance Is Required" xml:space="preserve">
    <value>Opening Balance Is Required</value>
  </data>
  <data name="Opening Balance State" xml:space="preserve">
    <value>Opening Balance State</value>
  </data>
  <data name="Opening Balance State Is Required" xml:space="preserve">
    <value>Opening Balance State Is Required</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Password Is Required" xml:space="preserve">
    <value>Password Is Required</value>
  </data>
  <data name="Phone Number" xml:space="preserve">
    <value>Phone Number</value>
  </data>
  <data name="Phone Number Is Required" xml:space="preserve">
    <value>Phone Number Is Required</value>
  </data>
  <data name="Qty" xml:space="preserve">
    <value>Qty</value>
  </data>
  <data name="Qty Is Required" xml:space="preserve">
    <value>Qty Is Required</value>
  </data>
  <data name="Qty Price" xml:space="preserve">
    <value>Qty Price</value>
  </data>
  <data name="Qty Price Is Required" xml:space="preserve">
    <value>Qty Price Is Required</value>
  </data>
  <data name="Remember me?" xml:space="preserve">
    <value>Remember me?</value>
  </data>
  <data name="Responsible Person" xml:space="preserve">
    <value>Responsible Person</value>
  </data>
  <data name="Responsible Person Is Required" xml:space="preserve">
    <value>Responsible Person Is Required</value>
  </data>
  <data name="Sale Unit Price" xml:space="preserve">
    <value>Sale Unit Price</value>
  </data>
  <data name="Sale Unit Price Is Required" xml:space="preserve">
    <value>Sale Unit Price Is Required</value>
  </data>
  <data name="Solar QTY" xml:space="preserve">
    <value>Solar QTY</value>
  </data>
  <data name="Solar QTY Is Required" xml:space="preserve">
    <value>Solar QTY Is Required</value>
  </data>
  <data name="Solar Total Price" xml:space="preserve">
    <value>Solar Total Price</value>
  </data>
  <data name="Solar Total Price Is Required" xml:space="preserve">
    <value>Solar Total Price Is Required</value>
  </data>
  <data name="Solar Unit Price" xml:space="preserve">
    <value>Solar Unit Price</value>
  </data>
  <data name="Solar Unit Price Is Required" xml:space="preserve">
    <value>Solar Unit Price Is Required</value>
  </data>
  <data name="Station" xml:space="preserve">
    <value>Staion</value>
  </data>
  <data name="Station Is Required" xml:space="preserve">
    <value>Station Is Required</value>
  </data>
  <data name="Stock Id" xml:space="preserve">
    <value>Stock Id</value>
  </data>
  <data name="Stock Name" xml:space="preserve">
    <value>Stock Name</value>
  </data>
  <data name="Stock Name English" xml:space="preserve">
    <value>Stock Name English</value>
  </data>
  <data name="Stock Name Is Required" xml:space="preserve">
    <value>Stock Name Is Required</value>
  </data>
  <data name="Stock Transport Amount" xml:space="preserve">
    <value>Stock Transport Amount</value>
  </data>
  <data name="Stock Transport Amount Is Required" xml:space="preserve">
    <value>Stock Transport Amount Is Required</value>
  </data>
  <data name="Stock Transport Unit" xml:space="preserve">
    <value>Stock Transport Unit</value>
  </data>
  <data name="Stock Transport Unit Is Required" xml:space="preserve">
    <value>Stock Transport Unit Is Required</value>
  </data>
  <data name="Stock Unit Cost" xml:space="preserve">
    <value>Stock Unit Cost</value>
  </data>
  <data name="Stock Unit Cost Is Required" xml:space="preserve">
    <value>Stock Unit Cost Is Required</value>
  </data>
  <data name="Tax" xml:space="preserve">
    <value>Tax</value>
  </data>
  <data name="Telephone" xml:space="preserve">
    <value>Telephone</value>
  </data>
  <data name="Telephone Is Required" xml:space="preserve">
    <value>Telephone Is Required</value>
  </data>
  <data name="Total Price" xml:space="preserve">
    <value>Total Price</value>
  </data>
  <data name="Total Price Is Required" xml:space="preserve">
    <value>Total Price Is Required</value>
  </data>
  <data name="Unit Cost" xml:space="preserve">
    <value>Unit Cost</value>
  </data>
  <data name="Unit Price" xml:space="preserve">
    <value>Unit Price</value>
  </data>
  <data name="Unit Price Is Required" xml:space="preserve">
    <value>Unit Price Is Required</value>
  </data>
  <data name="Unti Cost Is Required" xml:space="preserve">
    <value>Unti Cost Is Required</value>
  </data>
</root>