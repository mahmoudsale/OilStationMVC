@model OilStationMVC.Models.Driver
@using OilStationMVC.CustomHtmlHelper;
@using OilStationMVC.Controllers;
<div class="flex-fill overflow-auto">
    <div class="card">
        <div class="nav-tabs-responsive bg-light border-top">
            <div class="alert alert-success alert-bordered d-none " clientidmode="Static" id="ActionStatus" runat="server">gg</div>

        </div>

        <div class="tab-content">
            <div class="tab-pane fade show active" id="overview">
                @using (Html.BeginForm("CreateDriver", "Driver", FormMethod.Post))
                {
                    <!-- Card Body -->
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label id="CarId">Driver Id</label>
                                    @Html.mTextBoxFor(m => m.nId).ReadOnly(true).Render()
                                    @Html.ValidationMessageFor(m => m.nId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.sName)
                                    @Html.TextBoxFor(m => m.sName, null, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.sName, null, new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.sNameEng)
                                    @Html.TextBoxFor(m => m.sNameEng, null, new { @class = "form-control" })
                                </div>
                            </div>

                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.sTel)
                                    @Html.TextBoxFor(m => m.sTel, null, new { @class = "form-control" })
                                </div>
                            </div>

                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Email)
                                    @Html.TextBoxFor(m => m.Email, null, new { @class = "form-control" })
                                </div>
                            </div>

                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.sDesc)
                                    @Html.TextBoxFor(m => m.sDesc, null, new { @class = "form-control" })

                                </div>
                            </div>


                        </div>
                    </div>

                    <div class="card-footer d-flex justify-content-between align-items-center">
                        <button ID="btn_Save" runat="server" class="btn bg-success" Text="<%$ Resources:PagesResource,btn_Save%>" name="btn_Save"> Save</button>
                        @*<button ID="btn_Cancel" name="btn_Cancel" runat="server" class="btn bg-danger" Text=@Resources.PagesResource.btn_Cancel> Cancel</button>*@
                        <button type="button" class="btn btn-danger" data-dismiss="modal">@Resources.PagesResource.btn_Cancel</button>
                    </div>
                }

            </div>


        </div>
        @if (TempData["UserMessage"] != null)
        {
            <script>
                $("#ActionStatus").removeClass("d-none");
                $("#ActionStatus").text("Done Successfuly");
            </script>
        }
    </div>
</div>


